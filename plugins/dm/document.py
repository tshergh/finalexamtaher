# fileName : plugins/dm/document.py
# copyright ¬©Ô∏è 2021 nabilanavab

import os
import fitz
import shutil
import asyncio
import convertapi
from pdf import PDF
from PIL import Image
from time import sleep
from pdf import invite_link
from pyrogram import filters
from Configs.dm import Config
from pyrogram import Client as ILovePDF
from plugins.fileSize import get_size_format as gSF
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup

#--------------->
#--------> convertAPI instance
#------------------->

if Config.CONVERT_API is not None:
    convertapi.api_secret = Config.CONVERT_API

#--------------->
#--------> MAXIMUM FILE SIZE (IF IN config var.)
#------------------->

if Config.MAX_FILE_SIZE:
    MAX_FILE_SIZE=int(os.getenv("MAX_FILE_SIZE"))
    MAX_FILE_SIZE_IN_kiB=MAX_FILE_SIZE * (10 **6 )
else:
    MAX_FILE_SIZE=False


PDF_THUMBNAIL=Config.PDF_THUMBNAIL

#--------------->
#--------> FILES TO PDF SUPPORTED CODECS
#------------------->

suprtedFile = [
    ".jpg", ".jpeg", ".png"
]                                       # Img to pdf file support

suprtedPdfFile = [
    ".epub", ".xps", ".oxps",
    ".cbz", ".fb2"
]                                      # files to pdf (zero limits)

suprtedPdfFile2 = [
    ".csv", ".doc", ".docx", ".dot",
    ".dotx", ".log", ".html", ".mpt",
    ".odt", ".pot", ".potx", ".pps",
    ".ppsx", ".ppt", ".pptx", ".pub",
    ".rtf", ".txt", ".vdx", ".vsd",
    ".vsdx", ".vst", ".vstx", ".wpd",
    ".wps", ".wri", ".xls", ".xlsb",
    ".xlsx", ".xlt", ".xltx", ".xml"
]                                       # file to pdf (ConvertAPI limit)

#--------------->
#--------> LOCAL VARIABLES
#------------------->


UCantUse = "ŸÑÿß ŸäŸÖŸÉŸÜŸÉ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ Ÿáÿ∞ÿß ÿßŸÑÿ±Ÿàÿ®Ÿàÿ™ ŸÑÿ®ÿπÿ∂ ÿßŸÑÿ£ÿ≥ÿ®ÿßÿ® "


pdfReplyMsg = """`ŸÖÿßÿ∞ÿß ÿ™ÿ±ŸäÿØ ÿ£ŸÜ ÿ£ŸÅÿπŸÑ ÿ®Ÿáÿ∞ÿß ÿßŸÑŸÖŸÑŸÅ.ÿü \n What shall i wanted to do with this file.?`
File name(ÿßÿ≥ŸÖ ÿßŸÑŸÖŸÑŸÅ) : `{}`
File Size(ÿ≠ÿ¨ŸÖ ÿßŸÑŸÖŸÑŸÅ) : `{}`"""


bigFileUnSupport = """Due to Overload(ÿ®ÿ≥ÿ®ÿ® ÿßŸÑÿ™ÿ≠ŸÖŸäŸÑ ÿßŸÑÿ≤ÿßÿ¶ÿØ), Owner limits(ÿ≠ÿØÿØ ÿßŸÑŸÖÿ∑Ÿàÿ±) {}MB for pdf files(ŸÑŸÉŸÑ ŸÖŸÑŸÅÿßÿ™) üôá
`please Send me a file less than(ŸÑŸä ŸÖŸÑŸÅ ÿ≠ÿ¨ŸÖŸá ÿ£ŸÇŸÑ ŸÖŸÜ ) {}MB ` üôÉ"""


imageAdded = """`ÿ™ŸÖÿ™ ÿ•ÿ∂ÿßŸÅÿ© {} ÿµŸÅÿ≠ÿ© / ÿ•ŸÑŸâ ŸÖŸÑŸÅ pdf ..`ü§ì
/generate  ÿßÿ∂ÿ∫ÿ∑ ŸÑÿ•ŸÜÿ¥ÿßÿ° ŸÖŸÑŸÅ PDF ü§û"""


errorEditMsg = """ÿ≠ÿØÿ´ ÿÆÿ∑ÿ£ ŸÖÿß ..üòê Something went wrong..üòê
error: `{}`
Dev&eng: @ta_ja199 üë®‚Äçüíª"""


feedbackMsg = "[üåüRate:ÿ™ŸÇŸäŸäŸÖüåü](https://telegramic.org/bot/i2pdfbot/)"

forceSubMsg = """ŸÖÿ±ÿ≠ÿ®ÿß [{}](tg://user?id={}) ü§öüèª..!!
Ÿäÿ¨ÿ® ÿπŸÑŸäŸÉ ÿßŸÜÿ∂ŸÖÿßŸÖ ÿßŸÑŸâ ŸÇŸÜÿßÿ© ŸÑŸÉŸä ÿ™ÿ≥ÿ™ÿ∑Ÿäÿπ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßŸÑÿ®Ÿàÿ™ ÿßÿ¥ÿ™ÿ±ŸÉ ŸÅŸä Ÿáÿ∞Ÿá ÿßŸÑŸÇŸÜÿßÿ©  :üëâüëâ @i2pdfbotchannel
Ÿàÿ®ÿπÿØŸáÿß ÿßÿ±ÿ¨ÿπ ŸÑŸÑÿ®Ÿàÿ™ Ÿàÿßÿ∂ÿ∫ÿ∑ Ÿáÿ∞ÿß ÿßŸÑÿßŸÖÿ± /start ÿßŸà ŸÖŸÜ ÿßÿ≤ÿßÿ± ÿßÿ∂ÿ∫ÿ∑ ÿ™ÿ≠ÿØŸäÿ´
ŸÑŸÖÿ™ÿßÿ®ÿπÿ© ŸÉÿßŸÅÿ© ÿ™ÿ≠ÿØŸäÿ´ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™

You must join a channel in order to use the bot. Subscribe to this channel: üëâüëâ @i2pdfbotchannel
Then go back to the bot and press this command / start, or from the buttons, press update
To follow all bot updates`
"""


button=InlineKeyboardMarkup(
        [
            [
                InlineKeyboardButton(
                    "üòâwebbot(ŸÖŸàŸÇÿπ)üòâ",
                    url="https://electrical-engineer-cc40b.web.app/"
                )
            ]
       ]
    )

#--------------->
#--------> PDF REPLY BUTTON
#------------------->

pdfReply=InlineKeyboardMarkup(
        [
            [
                InlineKeyboardButton("‚≠êÔ∏è ŸÖÿπŸÑŸàŸÖÿßÿ™|info ‚≠êÔ∏è", callback_data="pdfInfo"),
                InlineKeyboardButton("üó≥ ŸÖÿπÿßŸäŸÜÿ© | previewüó≥", callback_data="preview")
            ],[
                InlineKeyboardButton("üñº ÿßŸÑŸâ ÿµŸàÿ± | toImage üñº", callback_data="toImage"),
                InlineKeyboardButton("‚úèÔ∏è ÿßŸÑŸâ ŸÜÿµ totext‚úèÔ∏è", callback_data="toText")
            ],[
                InlineKeyboardButton("üîê ÿ™ÿ¥ŸÅŸäÿ± | ENCRYPT üîê", callback_data="encrypt"),
                InlineKeyboardButton("üîí ŸÅŸÉ ÿ™ÿ¥ŸÅŸäÿ± | DECRYPTüîì",callback_data="decrypt")
            ],[
                InlineKeyboardButton("üóú ÿ∂ÿ∫ÿ∑ | COMPRESS üóú", callback_data="compress"),
                InlineKeyboardButton("ü§∏ ÿßÿ≥ÿ™ÿØÿßÿ±ÿ© | ROTATE  ü§∏", callback_data="rotate")
            ],[
                InlineKeyboardButton("‚úÇÔ∏è ÿ™ŸÇÿ≥ŸäŸÖ | SPLIT  ‚úÇÔ∏è", callback_data="split"),
                InlineKeyboardButton("üß¨ ÿØŸÖÿ¨ | MERGE  üß¨", callback_data="merge")
            ],[
                InlineKeyboardButton("‚Ñ¢Ô∏è ÿÆÿ™ŸÖ STAMP ‚Ñ¢Ô∏è", callback_data="stamp"),
                InlineKeyboardButton("‚úèÔ∏è ÿ•ÿπÿßÿØÿ© ÿ™ÿ≥ŸÖŸäÿ© |RENAME ‚úèÔ∏è", callback_data="rename")
            ],[
                InlineKeyboardButton("üìù ŸÖÿ≥ÿ≠ ÿ∂Ÿàÿ¶Ÿä | OCR üìù", callback_data="ocr"),
                InlineKeyboardButton("ü•∑A4 FORMAT|ÿ™ŸÜÿ≥ŸäŸÇü•∑", callback_data="format")
            ],[
                InlineKeyboardButton("ü§ê ZIP ü§ê", callback_data="zip"),
                InlineKeyboardButton("üéØ TAR üéØ", callback_data="tar")
            ],[     
                InlineKeyboardButton("üö´ ÿ£ÿ∫ŸÑŸÇ | CLOSE  üö´", callback_data="closeALL")
            ]
        ]
    )


#--------------->
#--------> Config var.
#------------------->

UPDATE_CHANNEL=Config.UPDATE_CHANNEL
BANNED_USERS=Config.BANNED_USERS
ADMIN_ONLY=Config.ADMIN_ONLY
ADMINS=Config.ADMINS

#--------------->
#--------> REPLY TO DOCUMENTS/FILES
#------------------->

@ILovePDF.on_message(filters.private & filters.document & ~filters.edited)
async def documents(bot, message):
    try:
        global invite_link
        await message.reply_chat_action("typing")
        # CHECK USER IN CHANNEL (IF UPDATE_CHANNEL ADDED)
        if UPDATE_CHANNEL:
            try:
                await bot.get_chat_member(
                    str(UPDATE_CHANNEL), message.chat.id
                )
            except Exception:
                if invite_link == None:
                    invite_link=await bot.create_chat_invite_link(
                        int(UPDATE_CHANNEL)
                    )
                await bot.send_message(
                    message.chat.id,
                    forceSubMsg.format(
                        message.from_user.first_name, message.chat.id
                    ),
                    reply_markup=InlineKeyboardMarkup(
                        [
                            [
                                InlineKeyboardButton("üåü(JOIN CHANNEL) ÿ£ŸÜÿ∏ŸÖ ŸÅŸä ÿßŸÑŸÇŸÜÿßÿ©üåü", url=invite_link.invite_link)
                            ],[
                                InlineKeyboardButton("ÿ™ÿ≠ÿØŸäÿ´ | Refresh ‚ôªÔ∏è", callback_data="refresh")
                            ]
                        ]
                    )
                )
                return
        # CHECKS IF USER BANNED/ADMIN..
        if (message.chat.id in BANNED_USERS) or (
            (ADMIN_ONLY) and (message.chat.id not in ADMINS)
        ):
            await message.reply_text(
                UCantUse,
                reply_markup=button
            )
            return
        
        isPdfOrImg = message.document.file_name        # file name
        fileSize = message.document.file_size          # file size
        fileNm, fileExt = os.path.splitext(isPdfOrImg) # seperate name & extension
        
        # REPLY TO LAGE FILES/DOCUMENTS
        if MAX_FILE_SIZE and fileSize >= int(MAX_FILE_SIZE_IN_kiB):
            await message.reply_text(
                bigFileUnSupport.format(MAX_FILE_SIZE, MAX_FILE_SIZE), quote=True,
                reply_markup=InlineKeyboardMarkup(
                    [
                        [
                            InlineKeyboardButton(
                                "üíéwebbot(ŸÖŸàŸÇÿπ)üíé",
                                url="https://electrical-engineer-cc40b.web.app/"
                            )
                        ]
                    ]
                )
            )
            return
        
        # IMAGE AS FILES (ADDS TO PDF FILE)
        elif fileExt.lower() in suprtedFile:
            try:
                imageDocReply = await message.reply_text(
                    "`ÿ™ÿ≠ŸÖŸäŸÑ ÿµŸàÿ±ÿ™ŸÉ (Downloading your Image) ..‚è≥`", quote=True
                )
                if not isinstance(PDF.get(message.chat.id), list):
                    PDF[message.chat.id]=[]
                await message.download(
                    f"{message.chat.id}/{message.chat.id}.jpg"
                )
                img = Image.open(
                    f"{message.chat.id}/{message.chat.id}.jpg"
                ).convert("RGB")
                PDF[message.chat.id].append(img)
                await imageDocReply.edit(
                    imageAdded.format(len(PDF[message.chat.id]))
                )
            except Exception as e:
                await imageDocReply.edit(
                    errorEditMsg.format(e)
                )
            
        # REPLY TO .PDF FILE EXTENSION
        elif fileExt.lower() == ".pdf":
            try:
                pdfMsgId = await message.reply_text(
                    "ÿßŸÑŸÖÿπÿßŸÑÿ¨ÿ© (Processing)..‚è≥", quote=True
                )
                await asyncio.sleep(0.5)
                await pdfMsgId.edit(
                    text=pdfReplyMsg.format(
                        isPdfOrImg, await gSF(fileSize)
                    ),
                    reply_markup=pdfReply
                )
            except Exception:
                pass
        
        # FILES TO PDF (PYMUPDF/FITZ)
        elif fileExt.lower() in suprtedPdfFile:
            try:
                pdfMsgId = await message.reply_text(
                    "`ÿ™ÿ≠ŸÖŸäŸÑ ŸÖŸÑŸÅŸÉ (Downloading your file) ..‚è≥`", quote=True
                )
                await message.download(
                    f"{message.message_id}/{isPdfOrImg}"
                )
                await pdfMsgId.edit("`ÿ¨ÿßÿ±Ÿä ÿßŸÑÿπŸÖŸÑ .. ŸÇÿØ Ÿäÿ≥ÿ™ÿ∫ÿ±ŸÇ ÿ®ÿπÿ∂ ÿßŸÑŸàŸÇÿ™ .. üíõ\nWork in Progress.. It might take some time.. `")
                Document=fitz.open(
                    f"{message.message_id}/{isPdfOrImg}"
                )
                b=Document.convert_to_pdf()
                pdf=fitz.open("pdf", b)
                pdf.save(
                    f"{message.message_id}/{fileNm}.pdf",
                    garbage=4,
                    deflate=True,
                )
                pdf.close()
                await pdfMsgId.edit(
                    "`ÿ®ÿØÿ£ ÿßŸÑÿ™ÿ≠ŸÖŸäŸÑ (Started Uploading)..`üèãÔ∏è"
                )
                await bot.send_chat_action(
                    message.chat.id, "upload_document"
                )
                await message.reply_document(
                    file_name=f"{fileNm}.pdf",
                    document=open(f"{message.message_id}/{fileNm}.pdf", "rb"),
                    thumb=PDF_THUMBNAIL,
                    caption=f"` ÿ™ŸÖ ÿ™ÿ≠ŸàŸäŸÑ ŸÖŸÑŸÅŸÉ: {fileExt} ÿ•ÿßŸÑŸâ pdf` \n`Converted: {fileExt} to pdf`",
                    quote=True
                )
                await pdfMsgId.delete()
                shutil.rmtree(f"{message.message_id}")
                await asyncio.sleep(5)
                await bot.send_chat_action(
                    message.chat.id, "typing"
                )
                await bot.send_message(
                    message.chat.id, feedbackMsg,
                    disable_web_page_preview = True
                )
            except Exception as e:
                try:
                    shutil.rmtree(f"{message.message_id}")
                    await pdfMsgId.edit(
                        errorEditMsg.format(e)
                    )
                except Exception:
                    pass
        
        # FILES TO PDF (CONVERTAPI)
        elif fileExt.lower() in suprtedPdfFile2:
            if Config.CONVERT_API is None:
                pdfMsgId = await message.reply_text(
                    "`ÿßŸÑŸÖÿßŸÑŸÉ ŸÜÿ≥Ÿäÿ™ ÿ•ÿ∂ÿßŸÅÿ© ConvertAPI .. ÿßÿ™ÿµŸÑ ÿ®ÿßŸÑŸÖÿßŸÑŸÉ üòí`",
                    quote=True
                )
                return
            else:
                try:
                    pdfMsgId = await message.reply_text(
                        "`ÿ™ÿ≠ŸÖŸäŸÑ ŸÖŸÑŸÅŸÉ (Downloading your file) ..‚è≥`", quote=True
                    )
                    await message.download(
                        f"{message.message_id}/{isPdfOrImg}"
                    )
                    await pdfMsgId.edit("`ÿ¨ÿßÿ±Ÿä ÿßŸÑÿπŸÖŸÑ .. ŸÇÿØ Ÿäÿ≥ÿ™ÿ∫ÿ±ŸÇ ÿ®ÿπÿ∂ ÿßŸÑŸàŸÇÿ™ ..\nWork in Progress.. It might take some time.. `üíõ")
                    try:
                        convertapi.convert(
                            "pdf",
                            {
                                "File": f"{message.message_id}/{isPdfOrImg}"
                            },
                            from_format = fileExt[1:],
                        ).save_files(
                            f"{message.message_id}/{fileNm}.pdf"
                        )
                    except Exception:
                        try:
                            shutil.rmtree(f"{message.message_id}")
                            await pdfMsgId.edit(
                                "ŸäÿµŸÑ ÿ≠ÿØ ConvertAPI .. ÿßÿ™ÿµŸÑ ÿ®ÿßŸÑŸÖÿßŸÑŸÉ"
                            )
                            return
                        except Exception:
                            pass
                    await bot.send_chat_action(
                        message.chat.id, "upload_document"
                    )
                    await message.reply_document(
                        file_name=f"{fileNm}.pdf",
                        document=open(f"{message.message_id}/{fileNm}.pdf", "rb"),
                        thumb=PDF_THUMBNAIL,
                        caption=f"` ÿ™ŸÖ ÿ™ÿ≠ŸàŸäŸÑ ŸÖŸÑŸÅŸÉ: {fileExt} ÿ•ŸÑŸâ pdf` \n`Converted: {fileExt} to pdf`",
                        quote=True
                    )
                    await pdfMsgId.delete()
                    shutil.rmtree(f"{message.message_id}")
                    await asyncio.sleep(5)
                    await bot.send_chat_action(
                        message.chat.id, "typing"
                    )
                    await bot.send_message(
                        message.chat.id, feedbackMsg,
                        disable_web_page_preview=True
                    )
                except Exception:
                    pass
        
        # UNSUPPORTED FILES
        else:
            try:
                await message.reply_text(
                    "`ŸÖŸÑŸÅ ÿ∫Ÿäÿ± ŸÖÿØÿπŸàŸÖ (unsupported file)..üôÑ`", quote=True
                )
            except Exception:
                pass
    
    except Exception as e:
        print("plugins/dm/document : ", e)

#                                                                                  Telegram: @nabilanavab
